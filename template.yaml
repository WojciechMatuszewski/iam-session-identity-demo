AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  iam-session-identity

  Sample SAM Template for iam-session-identity

Globals:
  Function:
    Timeout: 5

Resources:
  DataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  GetItemFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute

  GetItemFirstExternalRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub "${GetItemFunctionRole.Arn}"
            Action:
              - sts:AssumeRole
              - sts:SetSourceIdentity
      Policies:
        - PolicyName: AllowBucketAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource: !Sub "${DataTable.Arn}"

  GetItemSecondExternalRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub "${GetItemFirstExternalRole.Arn}"
            Action:
              - sts:AssumeRole
              - sts:SetSourceIdentity
      Policies:
        - PolicyName: AllowBucketAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource: !Sub "${DataTable.Arn}"

  GetItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./get-item
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Role: !Sub "${GetItemFunctionRole.Arn}"
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /
            Method: GET
      Environment:
        Variables:
          TABLE_NAME: !Ref DataTable
          FIRST_ROLE_ARN: !Sub "${GetItemFirstExternalRole.Arn}"
          SECOND_ROLE_ARN: !Sub "${GetItemSecondExternalRole.Arn}"

Outputs:
  URL:
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
